***** INITIALIZEVAR Duplicately defined symbol +
***** INITIALIZEVAR Duplicately defined symbol -
***** INITIALIZEVAR Duplicately defined symbol *
***** INITIALIZEVAR Duplicately defined symbol /
***** INITIALIZEVAR Duplicately defined symbol SQRT
***** INITIALIZEVAR Duplicately defined symbol EXP
***** INITIALIZEVAR Duplicately defined symbol LOG
***** INITIALIZEVAR Duplicately defined symbol EXPT
***** INITIALIZEVAR Duplicately defined symbol SIN
***** INITIALIZEVAR Duplicately defined symbol COS
***** INITIALIZEVAR Duplicately defined symbol ATAN
***** INITIALIZEVAR Duplicately defined symbol =
***** INITIALIZEVAR Duplicately defined symbol <
***** INITIALIZEVAR Duplicately defined symbol >
***** INITIALIZEVAR Duplicately defined symbol <=
***** INITIALIZEVAR Duplicately defined symbol >=
***** INITIALIZEVAR Duplicately defined symbol ZERO?
***** INITIALIZEVAR Duplicately defined symbol POSITIVE?
***** INITIALIZEVAR Duplicately defined symbol NEGATIVE?
***** INITIALIZEVAR Duplicately defined symbol REAL?
Scheme->C -- 15mar93jfb -- Copyright 1989-1993 Digital Equipment Corporation
> (load "codetection-test.sc")
MODULE form ignored
INCLUDE form ignored
INCLUDE form ignored
*3G-AND-4G-SERVERS*
*2G-SERVERS*
*WORKSTATIONS*
SERVER-NAME->NUMBER-OF-CPUS
GET-SERVER-IDLE-PERCENT
GET-APPROXIMATE-FREE-SERVER-CPUS
GET-TOTAL-SERVER-FREE-CPUS
REPEAT-LIST-TO-LENGTH-N
DETERMINE-JOB-TO-SERVER-MAPPING
DETERMINE-JOB-TO-SERVER-MAPPING-WITH-QUEUEING
SANITIZE-STRING-FOR-SPAWNING
CREATE-DSCI-JOB
CREATE-DSCI-JOB2
SPAWN-JOBS
SPAWN-AND-WAIT-FOR-JOBS
SPAWN-AND-WAIT-FOR-JOBS-WITH-QUEUEING
SYNCHRONOUS-RUN-COMMANDS-IN-PARALLEL
RSYNC-DIRECTORY-TO-SERVER
RUN-UNIX-COMMAND-ON-SERVER
SYNCHRONOUS-RUN-COMMANDS-IN-PARALLEL-WITH-QUEUEING
"/home/sbroniko/darpa-collaboration/ideas/toollib-multi-process.sc"
MODULE form ignored
INCLUDE form ignored
INCLUDE form ignored
INCLUDE form ignored
INCLUDE form ignored
TRANSFORM-WORLD-POINT-TO-PIXEL
TRANSFORM-WORLD-POINT-TO-PIXEL-WITH-TRANSFORMATION
TRANSFORM-WORLD-POINT->PIXEL-GENERIC
DRAW-POINT-PROJECTION
DRAW-TEXT-PROJECTION
DRAW-LINE-PROJECTION
DRAW-ARROW-PROJECTION
DRAW-AXIS-PROJECTION
WORLD-FORWARD-PROJECT
DRAW-3D-LINES-PROJECTION
DRAW-CIRCLE-PROJECTION
FACING-CAMERA?
FIND-CYLINDER-LINES
POINTS->SETS-OF-VISIBLE-POINTS
DRAW-CYLINDER-PROJECTION
DRAW-KING-BOTTOM-PROJECTION
MAKE-CYLINDER-IMAGE
MAKE-KING-BOTTOM-IMAGE
TEST-MAKE-CYLINDER-IMAGE
TEST-MAKE-KING-BOTTOM-IMAGE
"/home/dpbarret/imitate/tool/toollib-perspective-projection.sc"
LINSPACE
V/S
VECTORS->ANGLE
MY-ROTATION-3D-X
MY-ROTATION-3D-Y
MY-ROTATION-3D-Z
MY-MAKE-TRANSFORM-3D
MY-ASIN
MY-TRANSFORM->PARAMETERS
INVERT-TX-MATRIX
***** POINT->HOMOGENOUS is redefined
POINT->HOMOGENOUS
***** HOMOGENOUS->POINT is redefined
HOMOGENOUS->POINT
***** TRANSFORM-POINT-3D is redefined
TRANSFORM-POINT-3D
PIXEL-AND-HEIGHT->WORLD
BOX-AT-HEIGHT->WORLD-CORNERS
BOX-VECTOR-AT-HEIGHT-AND-POSE->WORLD-CORNERS
READ-ROBOT-ESTIMATED-POSE-FROM-LOG-FILE
INTERPOLATE-LINE
DRAW-3D-LINES-PROJECTION-NICE
ROBOT-POSE-TO-CAMERA->WORLD-TXF
X-Y-THETA->6DOF
SIX-DOF->X-Y-THETA
ROBOT-6DOF->WORLD-6DOF
WORLD-6DOF->ROBOT-6DOF
ROBOT-POSE-6DOF-TO-CAMERA->WORLD-TXF
READ-CAMERA-TIMING
TEST
"/home/sbroniko/codetection/source/rover-projection.sc"
PLOT-BOX-SCORES
PLOT-BOX-SCORES-PRELOADED
PLOT-LINES-IN-MATLAB
PLOT-LINES-IN-MATLAB-WITH-SYMBOLS
READ-PROBABILITIES-FROM-BOX-LIST
READ-FRAME-NUMBERS-FROM-BOX-LIST
READ-FILENAMES-FROM-BOX-LIST
OFFSET-VIDEO-FRAME-NUMBERS
PLOT-PROBABILITIES-FROM-BOX-LIST
PLOT-SCORES-FROM-TRAINING
PLOT-HMM-LIKELIHOODS
PLOT-TRACK-SCORES
VISUALIZE-BEST-MODELS
VISUALIZE-BEST-ROOTS
VISUALIZE-STATE-ITERATIONS
"/home/dpbarret/darpa-collaboration/pose-retraining/felz-baum-welch-plotting.sc"
VITERBI-BOXES
***** BOX-AT-HEIGHT->WORLD-CORNERS is redefined
BOX-AT-HEIGHT->WORLD-CORNERS
DISCOUNT-BOXES
VITERBI-MULTIPLE
"/home/sbroniko/codetection/source/new-sentence-codetection/viterbi.sc"
*CAMERA-OFFSET*
*CAMERA-OFFSET-MATRIX*
*CAMERA-K-MATRIX*
***** LOG-VON-MISES is redefined
LOG-VON-MISES
SELECT-FRAMES
RUN-CODETECTION-WITH-FRAMES
RUN-CODETECTION-WITH-VIDEO
ALIGN-FRAMES-WITH-POSES
GET-POSES-THAT-MATCH-FRAMES
GET-POSES-THAT-MATCH-FRAMES-NEW
GET-CORRECTED-POSES-THAT-MATCH-FRAMES
SAVE-POSES-HOUSE-TEST
SAVE-UNCORRECTED-POSES-HOUSE-TEST
SAVE-NEW-POSES-HOUSE-TEST
SAVE-OLD-POSES-HOUSE-TEST
FRAME-TEST
SCOTT-PROPOSALS&SIMILARITY-WITH-FRAMES
SCOTT-RUN-CODETECTION-FULL-VIDEO
FRAME-TEST2
MAKE-FRAMES
GET-MATLAB-PROPOSALS-SIMILARITY
GET-EDGEBOXES-PROPOSALS
GET-MATLAB-PROPOSALS-SIMILARITY-BY-FRAME
GET-MATLAB-PROPOSALS-SIMILARITY-FULL-VIDEO
GET-EDGEBOXES-PROPOSALS-FULL-VIDEO
RUN-CODETECTION-WITH-PROPOSALS-SIMILARITY
GET-MATLAB-DATA-HOUSE-TEST-NEW2
RUN-CODETECTION-VITERBI
RUN-CODETECTION-VITERBI-MULTIPLE
VISUALIZE-RESULTS-TEST
VISUALIZE-RESULTS
VISUALIZE-RESULTS-IMPROVED
VISUALIZE-RESULTS-IMPROVED-NEW
VISUALIZE-RESULTS-VITERBI
VISUALIZE-RESULTS-VITERBI-MULTIPLE
RUN-FULL-RESULTS
MATLAB-DATA-TO-FILES
GET-MATLAB-DATA-TRAINING-OR-GENERATION-IMPROVED
GET-EDGEBOXES-DATA-RALICRA2016
GET-MATLAB-DATA-AUTO-DRIVE-IMPROVED
GET-MATLAB-DATA-TRAINING-OR-GENERATION
RESULTS-END-TO-END
JOIN-IMAGES
JOIN-ALL-IMAGES
RUN-MY-SHIT
RUN-MY-SHIT-2
GET-XY-FROM-RESULTS-FILE
PLOT-OBJECTS-FROM-FILE
*XMIN*
*XMAX*
*YMIN*
*YMAX*
*BOUNDARIES*
*X-1*
*X0*
*X+1*
*Y-1*
*Y0*
*Y+1*
*Y+2*
POINT-LOCATIONS
PLOT-GRID
PLOT-OBJECTS-FROM-FLOORPLAN
PLOT-OBJECTS-FROM-FLOORPLAN-MULTICOLOR
ENSURE-SCORES
GET-SCORES-FROM-RESULTS-AND-FRAME-DATA-FILES
GET-DETECTION-IMAGES
MAKE-TEST-FILE
GET-DETECTION-DATA-FOR-FLOORPLAN
GET-DETECTION-DATA-RALICRA2016
POINT-IN-TRIANGLE
DETECT-SORT-LABEL-OBJECTS-SINGLE-FLOORPLAN
GET-CODETECTION-RESULTS-TRAINING-OR-GENERATION
GET-EDGEBOXES-DATA-MANY-SERVERS
GET-CODETECTION-RESULTS-AUTO-DRIVE
GET-OBJECT-DETECTIONS-ALL-FLOORPLANS
CODETECT-SORT-TEMPLABEL-TRAINING-OR-GENERATION
RUN-EDGEBOXES
CODETECT-SORT-TEMPLABEL-AUTO-DRIVE
GET-GROUND-TRUTH-FROM-DATASET-FILE
GET-LABELED-GROUND-TRUTH-FROM-DATASET-FILE
MAKE-SCHEME-FILE-OF-XYS
MAKE-SCHEME-FILE-OF-XYS-SEPARATED
SCOTT-PROPOSALS-ONLY
RUN-CODETECTION-ONLY-HOUSE-TEST
RUN-CODETECTION-ONLY-HOUSE-TEST-2
GET-CODETECTION-RESULTS-HOUSE-TEST
GET-CODETECTION-RESULTS-HOUSE-TEST-2
GET-MATLAB-DATA-HOUSE-TEST
QUICK-AND-DIRTY-TEST
SINGLE-RUN-TEST
SINGLE-RUN-TEST-NEW
SINGLE-RUN-TEST-NEW2
SINGLE-RUN-TEST-VITERBI
SINGLE-RUN-TEST-VITERBI-MULTIPLE
READ-CAMERA-TIMING-NEW
GET-MATLAB-DATA-HOUSE-TEST-NEW
***** GET-MATLAB-DATA-HOUSE-TEST-NEW2 is redefined
GET-MATLAB-DATA-HOUSE-TEST-NEW2
GET-MATLAB-PROPOSALS-SIMILARITY-FULL-VIDEO-NEW
GET-MATLAB-PROPOSALS-SIMILARITY-FULL-VIDEO-NEW2
GET-MATLAB-PROPOSALS-SIMILARITY-NEW
GET-MATLAB-PROPOSALS-SIMILARITY-NEW2
GET-MATLAB-PROPOSALS-SIMILARITY-VITERBI
GET-AND-SAVE-PROPOSAL-BOXES
GET-AND-SAVE-PROPOSAL-BOXES-ALL-VIDEOS
FRAMES-AND-POSES->MATLAB
SIMPLE-RUN-AND-PLOT
SIMPLE-TEST
SIMPLE-RUN-AND-PLOT-NEW
SIMPLE-RUN-AND-PLOT-VITERBI
READ-AND-SORT-MATLAB-PROPOSALS
GET-TLD-TUBE-FROM-BOX
SCOTT-BOX->VOC4
*VIDEO-PATH*
*TEST-PATH*
GET-FRAME-NUMBERS
GENERATE-PROPOSALS
FRAMES->MATLAB!
FRAMES->MATLAB-NO-FREE!
GET-MEDIANFLOW-TUBE-FROM-STARTING-FRAME-AND-PROPOSAL-BOX
GET-ALL-TUBES
GET-ALL-TUBES-SORTED
RENDER-ONE-TUBE
RENDER-ALL-TUBES
SCOTT-BOX-X1
SCOTT-BOX-X2
SCOTT-BOX-Y1
SCOTT-BOX-Y2
SCOTT-BOX-AREA
SCOTT-BOX-INTERSECTION-AREA
SCOTT-BOX-UNION-AREA
SCOTT-BOX-INTERSECTION-OVER-UNION
TUBE-INTERSECTION-OVER-UNION
TUBES-OVERLAP?
TUBE-NMS
TUBE-TEST-END-TO-END
BIG-TUBE-TEST-END-TO-END
BIG-TUBE-TEST-END-TO-END2
GET-ALL-NMS-TUBES
GET-ALL-NMS-TUBES-AND-RENDER-N
GET-AND-RENDER-N-NMS-TUBES-HOUSE-TEST
ALIGN-ONE-TUBE-WITH-POSES
REMOVE-FALSE-BOXES
ALIGN-ALL-TUBES-WITH-POSES-AND-REMOVE-FALSES
READ-AND-ALIGN-SCORED-TUBES
PIXEL-AND-POSE->WORLD-LINE
PIXEL-AND-POSE-6DOF->WORLD-LINE
ALIGNED-TUBE-WITH-SCORE->LINES
RAW-TUBE-WITH-SCORE-AND-POSE-LIST-6DOF->LINES
*IMG-WIDTH*
*IMG-HEIGHT*
BOX-WITHIN-FRAME?
RAW-TUBE-WITH-SCORE-AND-POSE-LIST->WORLD-CORNERS-LIST
WORLD-CORNERS-LIST->WORLD-XYWH-LIST
WORLD-XYWH-LIST->WORLD-MEAN-AND-VARIANCE
WORLD-XYWH-LIST->WORLD-MEAN-AND-DISTANCES
WORLD-XYWHS-AND-POSES->WORLD-MEAN-VARIANCE-ROBOT
FIND-WORLD-MEANS-AND-VARIANCES
FIND-WORLD-MEANS-VARIANCES-ROBOTS
FIND-AND-SAVE-WORLD-MEANS-AND-VARIANCES-HOUSE-TEST
FIND-AND-SAVE-WORLD-MEANS-VARIANCES-ROBOTS-HOUSE-TEST
FILTER-WORLD-MEANS-AND-VARIANCES
FILTER-WORLD-MEANS-VARIANCES-ROBOTS
*VAR-THRESH*
*RATIO-THRESH*
*LENGTH-THRESH*
FILTER-TUBES-BY-LENGTH
FIND-ABC-AND-FILTER
*DISTANCE-THRESH*
FIND-DEF-AND-FILTER
FIND-ABCDEF
PREPROCESS-TUBE
FIND-LOW-VARIANCE-TUBES
SAVE-LOW-VARIANCE-TUBES-HOUSE-TEST
SPLIT-PATH-BY-ALIGNMENT
GET-NOUN-PREPOSITION-PATHS
GET-GRAPHICAL-MODEL-VARIABLES
GET-GRAPHICAL-MODEL-VARIABLES-FOR-SIMPLE-GM
FIND-UNARY-SCORE
FIND-SIMPLE-UNARY-SCORE
FIND-SIMPLE-VARIANCE-FACTOR
FIND-UNARY-SCORES-FOR-ALL-TUBES
FIND-SIMPLE-UNARY-SCORES-FOR-ALL-TUBES
FIND-UNARY-SCORES-FOR-ONE-RUN
FIND-UNARY-SCORE-MATRIX-FOR-FLOORPLAN
FIND-UNARY-SCORE-MATRIX-FOR-GIVEN-TUBES
FIND-SIMPLE-UNARY-SCORE-MATRIX-FOR-GIVEN-TUBES
TUBES->TUBE-OBJECTNESS-SCORES
FIND-SIMPLE-NOUN-LIST
NUM-FUNC
FIND-NUMBER
NUMBER-NOUNS
MAKE-HELPER-NOUN-LIST
MAKE-SIMPLE-HELPER-NOUN-LIST
MAKE-PHRASES
CLEAN-PHRASES
FIND-NOUN-TO-HELPER-NOUN-BINARY-SCORE
FIND-NOUN-NOUN-BINARY-SCORE-MATRIX
FIND-INDEX-IN-LIST
FIND-ALL-INSTANCES
FIND-SAME-NOUNS
MAKE-LIST-OF-MATCHING-NOUNS
*SIGMOID-CENTER*
*SIGMOID-SLOPE*
*SIG-WEIGHT*
FIND-LOCATION-SIMILARITY-BETWEEN-TUBES
ELEMENTWISE-MULTIPLY-MATRICES
FIND-BINARY-SCORE-BETWEEN-TUBES
ALL-TUBES->PHOW-VISUAL-SIMILARITY-MATRIX
GET-PHOW-HISTS-ALL-TUBES
FIND-BINARY-SCORE-DATA-FOR-FLOORPLAN
FIND-BINARY-SCORE-DATA-FOR-GIVEN-TUBES
FIND-SIMPLE-BINARY-SCORE-DATA-FOR-GIVEN-TUBES
FIND-GRAPHICAL-MODEL-DATA-FOR-FLOORPLAN
FIND-GRAPHICAL-MODEL-DATA-FOR-GIVEN-TUBES
FIND-SIMPLE-GRAPHICAL-MODEL-DATA-FOR-GIVEN-TUBES
RUN-GRAPHICAL-MODEL
RUN-SIMPLE-GRAPHICAL-MODEL
GM-FULL-TEST
GM-SMALL-EXAMPLE
SIMPLE-GM-SMALL-EXAMPLE
RENDER-GM-OUTPUT
RENDER-GM-OUTPUT-SMALL-EXAMPLE
RENDER-SIMPLE-GM-OUTPUT-SMALL-EXAMPLE
RENDER-GOOD-TUBES
RENDER-B-TUBES
RENDER-D-TUBES
RENDER-MULTIPLE-FILTERED-TUBES
RENDER-UNFILTERED-TUBES
RENDER-FILTERED-TUBES-HOUSE-TEST
RENDER-B-D-TUBES-HOUSE-TEST
POINT-LINE-SQUARED-DISTANCE
FIND-POINT-FROM-LINES
VISUALIZE-TWO-TRACKS
CORRECT-THETA-DRIFT
FIND-THETA-DRIFT-FROM-TRACK
FIND-ALL-THETA-DRIFTS
FIND-POINTS-AND-DELTAS
FIND-POINTS-AND-DELTAS-OLD
FIND-DELTAS-ONLY
GET-DELTAS-OF-WORLD-TRACK-3DOF
WORLD-DELTA-AND-POSE-6DOF->ROBOT-DELTA-6DOF
***** CORRECT-ANGLE is redefined
CORRECT-ANGLE
ANGLE-MINUS
SUBTRACT-POSE
WEIGHTED-SUBTRACT-POSE
WORLD-POSE-AND-ROBOT-DELTA-6DOF->WORLD-POSE-6DOF
ROBOT-DELTAS-LIST-AND-WORLD-START-3DOF->WORLD-TRACK-6DOF
WORLD-TRACK-3DOF->WORLD-TRACK-6DOF
WORLD-TRACK-6DOF->WORLD-TRACK-3DOF
GET-DELTAS-LIST-FROM-WORLD-TRACK-6DOF
GET-DELTAS-LIST-IN-ROBOT-6DOF
SPLIT-DELTAS
MERGE-DELTAS
SPLIT-POINTS
MERGE-POINTS
MERGE-GIANT-VECTOR
SPLIT-GIANT-VECTOR
SPLIT-GIANT-VECTOR-FOUR-POINTS
FIND-6DOF-POSES-LIST-FROM-DELTAS-VECTOR-AND-INITIAL-POSE
MATLAB-PLOT-ONE-RUN
MATLAB-PLOT-JUST-TRACES
QUICK-PLOT-TRACES-ONLY
MATLAB-PLOT-THREE-TRACES
MATLAB-PLOT-ONE-RUN-WITH-ALL-TUBES
PLOT-LINES-IN-MATLAB-WITH-SYMBOLS-NO-LEGEND
MATLAB-PLOT-ARROWHEADS-ON-TRACE
LIST-MEDIAN
"codetection-test.sc"
> (define *foo* (read-object-from-file "/aux/sbroniko/vader-rover/logs/MSEE1-dataset/ralicra2016/plan0//2014-11-20-02:31:11/20160212-edgeboxes-test/frame-data.sc"))
*FOO*
> (length (first *foo*))
342
> (first (first *foo*))
#(#(74. 1. 639. 249. 0.1937138289213181 0.1789537370204926 2.671093463897705 1.930720686912537) #(82. 75. 550. 247. 0.1898617893457413 0.04129422828555107 2.781001329421997 1.671114921569824) #(74. 64. 639. 255. 0.1858787387609482 0.1620270311832428 2.390772104263306 1.711695671081543) #(534. 118. 639. 202. 8.435355705254041e-06 -399.4520263671875 -1057.378295898438 154.6900329589844) #(111. 1. 550. 234. 0.1821311116218567 0.1187296137213707 3.83321475982666 2.206885099411011) #(1. 52. 580. 248. 0.1810323446989059 -0.04783765971660614 2.724645614624023 2.021589994430542) #(526. 1. 639. 205. 1.933038898540989e-22 14.95691776275635 40.30360412597656 6.308624744415283) #(1. 1. 512. 249. 0.1764736175537109 -0.1621627062559128 2.670656204223633 1.746517419815063) #(142. 1. 190. 94. 7.903595206506883e-06 0.2468762099742889 -0.8713715076446533 0.07249677181243896) #(530. 56. 639. 202. 7.824768066534364e-06 -396.5333557128906 -1057.37451171875 160.5273590087891))
> (matrix->list-of-lists (first (first *foo*)))
((74. 1. 639. 249. 0.1937138289213181 0.1789537370204926 2.671093463897705 1.930720686912537) (82. 75. 550. 247. 0.1898617893457413 0.04129422828555107 2.781001329421997 1.671114921569824) (74. 64. 639. 255. 0.1858787387609482 0.1620270311832428 2.390772104263306 1.711695671081543) (534. 118. 639. 202. 8.435355705254041e-06 -399.4520263671875 -1057.378295898438 154.6900329589844) (111. 1. 550. 234. 0.1821311116218567 0.1187296137213707 3.83321475982666 2.206885099411011) (1. 52. 580. 248. 0.1810323446989059 -0.04783765971660614 2.724645614624023 2.021589994430542) (526. 1. 639. 205. 1.933038898540989e-22 14.95691776275635 40.30360412597656 6.308624744415283) (1. 1. 512. 249. 0.1764736175537109 -0.1621627062559128 2.670656204223633 1.746517419815063) (142. 1. 190. 94. 7.903595206506883e-06 0.2468762099742889 -0.8713715076446533 0.07249677181243896) (530. 56. 639. 202. 7.824768066534364e-06 -396.5333557128906 -1057.37451171875 160.5273590087891))
> (length (matrix->list-of-lists (first (first *foo*))))
10
> (length *foo*)
1
> (define *newfoo* (map (lambda (l) (map (lambda (ll) (matrix->list-of-lists ll))) l)) (first *foo*))

>>Error: Illegal form: (DEFINE *NEWFOO* (MAP (LAMBDA (L) (MAP (LAMBDA (LL) (MATRIX->LIST-OF-LISTS LL))) L)) (FIRST *FOO*))
DEBUGGER:
>> :n
QOBISCHEME-BACKTRACE-ERROR-HANDLER:
>> :n
ERROR:
>> :N
scexpnd1_l2163 [inside TOP-LEVEL]:
>> :n
INITIAL-EXPANDER:
>> :n
EXPAND:
>> :n
EVAL:
>> 
Back to top level
> (define *newfoo* (map (lambda (l) (matrix->list-of-lists l)) (first *foo*)))
*NEWFOO*
> (length *newfoo*)
342
> (first *newfoo*)
((74. 1. 639. 249. 0.1937138289213181 0.1789537370204926 2.671093463897705 1.930720686912537) (82. 75. 550. 247. 0.1898617893457413 0.04129422828555107 2.781001329421997 1.671114921569824) (74. 64. 639. 255. 0.1858787387609482 0.1620270311832428 2.390772104263306 1.711695671081543) (534. 118. 639. 202. 8.435355705254041e-06 -399.4520263671875 -1057.378295898438 154.6900329589844) (111. 1. 550. 234. 0.1821311116218567 0.1187296137213707 3.83321475982666 2.206885099411011) (1. 52. 580. 248. 0.1810323446989059 -0.04783765971660614 2.724645614624023 2.021589994430542) (526. 1. 639. 205. 1.933038898540989e-22 14.95691776275635 40.30360412597656 6.308624744415283) (1. 1. 512. 249. 0.1764736175537109 -0.1621627062559128 2.670656204223633 1.746517419815063) (142. 1. 190. 94. 7.903595206506883e-06 0.2468762099742889 -0.8713715076446533 0.07249677181243896) (530. 56. 639. 202. 7.824768066534364e-06 -396.5333557128906 -1057.37451171875 160.5273590087891))
> (define *newfoo* (join (map (lambda (l) (matrix->list-of-lists l)) (first *foo*))))
***** *NEWFOO* is redefined
*NEWFOO*
> (length *newfoo*)
3420
> (first *newfoo*)
(74. 1. 639. 249. 0.1937138289213181 0.1789537370204926 2.671093463897705 1.930720686912537)
> (define floorplan-dir "/aux/sbroniko/vader-rover/logs/MSEE1-dataset/ralicra2016/plan0")
	(define frame-data-filename "frame-data.sc")
	(define output-dirname "20160212-edgeboxes-test")
		(define rundirs (system-output (format #f "ls -d ~a/20*/" floorplan-dir)))
	(define boxdata
	 (join
	  (map
	   (lambda (dir)
	    (first (read-object-from-file
		    (format #f "~a/~a/~a" dir output-dirname
			    frame-data-filename))))
	   rundirs)))
FLOORPLAN-DIR
FRAME-DATA-FILENAME
OUTPUT-DIRNAME
RUNDIRS
BOXDATA
> (first boxdata)
#(#(74. 1. 639. 249. 0.1937138289213181 0.1789537370204926 2.671093463897705 1.930720686912537) #(82. 75. 550. 247. 0.1898617893457413 0.04129422828555107 2.781001329421997 1.671114921569824) #(74. 64. 639. 255. 0.1858787387609482 0.1620270311832428 2.390772104263306 1.711695671081543) #(534. 118. 639. 202. 8.435355705254041e-06 -399.4520263671875 -1057.378295898438 154.6900329589844) #(111. 1. 550. 234. 0.1821311116218567 0.1187296137213707 3.83321475982666 2.206885099411011) #(1. 52. 580. 248. 0.1810323446989059 -0.04783765971660614 2.724645614624023 2.021589994430542) #(526. 1. 639. 205. 1.933038898540989e-22 14.95691776275635 40.30360412597656 6.308624744415283) #(1. 1. 512. 249. 0.1764736175537109 -0.1621627062559128 2.670656204223633 1.746517419815063) #(142. 1. 190. 94. 7.903595206506883e-06 0.2468762099742889 -0.8713715076446533 0.07249677181243896) #(530. 56. 639. 202. 7.824768066534364e-06 -396.5333557128906 -1057.37451171875 160.5273590087891))
> (define all-boxes (join (map (lambda (l) (matrix->list-of-lists l))
			      boxdata)))
ALL-BOXES
> (first all-boxes)
(74. 1. 639. 249. 0.1937138289213181 0.1789537370204926 2.671093463897705 1.930720686912537)
> (exit)

Process scheme finished
